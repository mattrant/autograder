{
	"inf_loop": {
		 "compile_string": "gcc inf_loop.c -o inf_loop",
		 "max time": 5,
		 "test case":{
			 "input":[""],
			 "expected output":["this should loop infinitely"],
			 "score":1,
			 "run string":["./inf_loop"]
		 }
	 },
	 "fault": {
 		 "compile_string": "gcc fault.c -o fault",
 		 "max time": 5,
 		 "test case":{
 			 "input":[""],
 			 "expected output":["this should fault"],
 			 "score":1,
			 "run string":["./fault"]
 		 }
	 },
	"missing_file": {
			 "compile_string": "gcc missing_file.c -o missing_file",
			 "max time": 5,
			 "test case":{
				 "input":[""],
				 "expected output":["this file should not exist"],
				 "score":1,
				 "run string":["./missing_file"]
			 }
		 },
	"correct_double": {
				 "compile_string": "gcc correct_double.c -o correct_double",
				 "max time": 5,
				 "test case":{
					 "tolerance":0.05,
					 "input":[""],
					 "expected output":["27.856"],
					 "score":1,
					 "run string":["./correct_double"]
				}
		},
		"incorrect_double": {
 				 "compile_string": "gcc incorrect_double.c -o incorrect_double",
 				 "max time": 5,
 				 "test case":{
 					 "tolerance":0.05,
 					 "input":[""],
 					 "expected output":["27.856"],
 					 "score":1,
					 "run string":["./incorrect_double"]
		 			}
		 },
		"correct_regular":{
			"compile_string": "gcc correct_regular.c -o correct_regular",
			"max time": 5,
			"test case":{
				"input":[""],
				"expected output":["the"],
				"score":1,
				"run string":["./correct_regular"]
			 }
		},
	"incorrect_regular":{
		"compile_string": "gcc incorrect_regular.c -o incorrect_regular",
		"max time": 5,
		"test case":{
			"input":[""],
			"expected output":["the"],
			"score":1,
			"run string":["./incorrect_regular"]
		 }
	},
	"incorrect_file":{
		"compile_string": "gcc incorrect_file.c -o incorrect_file",
		"max time": 5,
		"test case":{
		"check files":true,
			"input":[""],
			"expected output":["incorrect_output_file.txt-answer.txt"],
			"score":1,
			"run string":["./incorrect_file"]
		 }
	},
	"correct_file":{
		"compile_string": "gcc correct_file.c -o correct_file",
		"max time": 5,
		"test case":{
			"check files":true,
			"input":[""],
			"expected output":["correct_output_file.txt-answer.txt"],
			"score":1,
			"run string":["./correct_file"]
		 }
	},
	"correct_multiple_input":{
		"compile_string": "gcc correct_multiple_input.c -o correct_multiple_input",
		"max time": 5,
		"test case":{
			"input":[1,2,3,4],
			"expected output":[2,3,4,5],
			"score":1,
			"run string":["./correct_multiple_input","./correct_multiple_input","./correct_multiple_input","./correct_multiple_input"]
		 }
	},
	"incorrect_multiple_input":{
		"compile_string": "gcc incorrect_multiple_input.c -o incorrect_multiple_input",
		"max time": 5,
		"test case":{
			"input":[1,2,3,4],
			"expected output":[2,3,4,5],
			"score":1,
			"run string":["./incorrect_multiple_input","./incorrect_multiple_input","./incorrect_multiple_input","./incorrect_multiple_input"]
		 }
	},
	"correct_multiple_cases":{
		"compile_string": "gcc correct_multiple_cases.c -o correct_multiple_cases",
		"max time": 5,
		"test case":{
			"input":["c"],
			"expected output":["d"],
			"score":1,
			"run string":["./correct_multiple_cases"]
		},
		 "test case2":{
			 "input":["a"],
			 "expected output":["b"],
			 "score":1,
			 "run string":["./correct_multiple_cases"]
		 }
	},
	"incorrect_multiple_cases":{
		"compile_string": "gcc incorrect_multiple_cases.c -o incorrect_multiple_cases",
		"max time": 5,
		"test case":{
			"input":[1],
			"expected output":[2],
			"score":1,
			"run string":["./incorrect_multiple_cases"]
		},
		 "test case2":{
			 "input":[2],
			 "expected output":[3],
			 "score":1,
			 "run string":["./incorrect_multiple_cases"]
		 }
	},
	"correct_single_input":{
		"compile_string": "gcc correct_single_input.c -o correct_single_input",
		"max time": 5,
		"test case":{
			"input":[25],
			"expected output":[29],
			"score":1,
			"run string":["./correct_single_input"]
		 }
	},
	"illegal_utf":{
		"compile_string": "gcc illegal_utf.c -o illegal_utf",
		"max time": 5,
		"test case":{
			"input":[""],
			"expected output":["should be incorrect"],
			"score":1,
			"run string":["./illegal_utf"]
		 }
	}

}
